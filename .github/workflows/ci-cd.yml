name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
          MYSQL_USER: test
          MYSQL_PASSWORD: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, pdo_mysql, xml
          coverage: none

      - name: Copy .env.example to .env.testing
        run: cp .env.example .env.testing

      - name: Generate application key
        run: php artisan key:generate --env=testing

      - name: Install PHP dependencies
        run: composer install --prefer-dist --no-interaction --no-progress --no-suggest

      - name: Run database migrations
        run: php artisan migrate --env=testing

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Node dependencies
        run: npm install

      - name: Run Svelte tests
        run: npm test

      - name: Run Laravel tests
        run: php artisan test --env=testing

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Build assets
        run: npm run build

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-agent bash -c 'ssh-add ~/.ssh/id_rsa; ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << EOF
            cd /var/www/mgx-dashboard
            git pull origin master
            composer install --prefer-dist --no-interaction --no-progress --no-suggest
            npm install
            npm run build
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            sudo service apache2 restart
          EOF'
